<?xml version="1.0" encoding="UTF-8"?>
<protocol name="liri_color_picker">
  <copyright><![CDATA[
    Copyright (C) 2020 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>

    Permission is hereby granted, free of charge, to any person
    obtaining a copy of this software and associated documentation files
    (the "Software"), to deal in the Software without restriction,
    including without limitation the rights to use, copy, modify, merge,
    publish, distribute, sublicense, and/or sell copies of the Software,
    and to permit persons to whom the Software is furnished to do so,
    subject to the following conditions:

    The above copyright notice and this permission notice (including the
    next paragraph) shall be included in all copies or substantial
    portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
  ]]></copyright>

  <interface name="liri_color_picker_manager" version="1">
    <description summary="color picker manager">
      This interface allows a client to read the ARGB value of a pixel,
      effectively pickup up the color at a specific coordinate
      of an output.
    </description>

    <enum name="error">
      <entry name="already_constructed" value="0" summary="a color picker for the same output already exist"/>
    </enum>

    <request name="create_picker">
      <description summary="create a picker object">
        Instantiate an interface extention for the given wl_output to
        pick the color from a specific location.
      </description>
      <arg name="id" type="new_id" interface="liri_color_picker"/>
      <arg name="output" type="object" interface="wl_output"/>
    </request>

    <request name="destroy" type="destructor">
      <description summary="destroy the manager">
        All objects created by the manager will still remain valid, until their
        appropriate destroy request has been called.
      </description>
    </request>
  </interface>

  <interface name="liri_color_picker" version="1">
    <description summary="color picker">
      This object represent a single color picker request for an output.
      It is possible to pick the color of a well known location within the
      output bounds, or start an interactive request to pick the color of
      the mouse pointer location at the time when the user presses a
      mouse button.
    </description>

    <enum name="error">
      <entry name="still_in_progress" value="0" summary="another pick_interactive request is still in progress"/>
    </enum>

    <request name="pick_at_location">
      <description summary="pick a color at a specific output location">
        Pick the color of a pixel at specific coordinates within the
        bounds of the output.
      </description>
      <arg name="serial" type="uint" summary="serial number of the pick request"/>
      <arg name="x" type="uint" summary="x coordinates in output space"/>
      <arg name="y" type="uint" summary="y coordinates in output space"/>
    </request>

    <request name="pick_interactively">
      <description summary="pick a color interactively">
        Start a pointer-driven pixel selection.
        The user moves the mouse pointer to their desired location and press
        a mouse button.

        This request fails if another interactive request is still in progress,
        regardless of what liri_color_picker object originated it and regardless
        of which output is involved.
      </description>
      <arg name="seat" type="object" interface="wl_seat" summary="seat whose pointer is used"/>
      <arg name="serial" type="uint" summary="serial number of the pick_interactive request"/>
    </request>

    <event name="picked">
      <description summary="result of the pick request">
        The ARGB color of the selected pixel is available.
      </description>
      <arg name="serial" type="uint" summary="serial number of the request"/>
      <arg name="value" type="uint" summary="ARGB color value"/>
    </event>

    <request name="destroy" type="destructor">
      <description summary="release the object">
        This destroys the liri_color_picker object.
      </description>
    </request>
  </interface>
</protocol>
